#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>

typedef struct {
    char nome[50];
    float nota1;
    float nota2;
    float media;
    char status[20];
} Aluno;

typedef struct {
    char nome[50];
    char disciplina[50];
} Professor;

typedef struct {
    char usuario[50];
    char senha[50];
} Usuario;

void calcularMedia(Aluno *a) {
    a->media = (a->nota1 + a->nota2) / 2;
    if (a->media >= 7.0) {
        strcpy(a->status, "Aprovado");
    } else if (a->media >= 4.0) {
        strcpy(a->status, "Recuperação");
    } else {
        strcpy(a->status, "Reprovado");
    }
}

void mostrarAluno(Aluno a) {
    printf("Nome: %s\n", a.nome);
    printf("Nota 1: %.2f | Nota 2: %.2f | Média: %.2f\n", a.nota1, a.nota2, a.media);
    printf("Status: %s\n", a.status);
}

void encontrarMaiorEMenorMedia(Aluno alunos[], int n) {
    if (n == 0) return;

    int indiceMaior = 0;
    int indiceMenor = 0;

    for (int i = 1; i < n; i++) {
        if (alunos[i].media > alunos[indiceMaior].media) {
            indiceMaior = i;
        }
        if (alunos[i].media < alunos[indiceMenor].media) {
            indiceMenor = i;
        }
    }

    printf("\n--- Aluno com MAIOR Média ---\n");
    mostrarAluno(alunos[indiceMaior]);

    printf("\n--- Aluno com MENOR Média ---\n");
    mostrarAluno(alunos[indiceMenor]);
}

int login(Usuario u) {
    char user[50], pass[50];
    int tentativas = 0;
    int maxTentativas = 3;

    while (tentativas < maxTentativas) {
        printf("\n----- Login do Sistema -----\n");
        printf("Digite usuário e senha para acessar o programa, você tem 3 tentativas!\n");
        printf("Tentativa %d de %d\n", tentativas + 1, maxTentativas);
        printf("Usuário: ");
        scanf(" %s", user);
        printf("Senha: ");
        scanf(" %s", pass);

        if (strcmp(user, u.usuario) == 0 && strcmp(pass, u.senha) == 0) {
            printf("Login realizado com sucesso!\n\n");
            return 1;
        } else {
            printf("Usuário ou senha inválidos.\n");
            tentativas++;
        }
    }

    printf("\nNúmero máximo de tentativas excedido, entre em contato com a equipe desenvolvimento. O programa será encerrado!\n");
    return 0;
}

int main() {
    setlocale(LC_ALL,"Portuguese_Brazil");
    Usuario usuario = {"admin", "1234"};
    Professor prof;
    Aluno *alunos = NULL;
    int numAlunos = 0;
    int capacidadeAlunos = 0;
    char continuar = 'S';
    float somaMedias = 0.0;
    float mediaGeral = 0.0;

    if (!login(usuario)) return 0;

    printf("--- Cadastro do Professor ---\n");
    printf("Nome do professor: ");
    scanf(" %[^\n]", prof.nome);
    printf("Disciplina: ");
    scanf(" %[^\n]", prof.disciplina);

    while (continuar == 'S' || continuar == 's') {
        if (numAlunos >= capacidadeAlunos) {
            capacidadeAlunos += 5;
            Aluno *temp = (Aluno *)realloc(alunos, capacidadeAlunos * sizeof(Aluno));
            if (temp == NULL) {
                printf("Erro na alocação de memória!\n");
                free(alunos);
                return 1;
            }
            alunos = temp;
        }

        printf("\n--- Cadastro do Aluno %d ---\n", numAlunos + 1);
        printf("Nome do aluno: ");
        scanf(" %[^\n]", alunos[numAlunos].nome);

        printf("Nota 1: ");
        scanf("%f", &alunos[numAlunos].nota1);
        while (alunos[numAlunos].nota1 < 0 || alunos[numAlunos].nota1 > 10) {
            printf("Nota inválida. Digite uma nota entre 0 e 10: ");
            scanf("%f", &alunos[numAlunos].nota1);
        }

        printf("Nota 2: ");
        scanf("%f", &alunos[numAlunos].nota2);
        while (alunos[numAlunos].nota2 < 0 || alunos[numAlunos].nota2 > 10) {
            printf("Nota inválida. Digite uma nota entre 0 e 10: ");
            scanf("%f", &alunos[numAlunos].nota2);
        }

        calcularMedia(&alunos[numAlunos]);
        somaMedias += alunos[numAlunos].media; // Acumula a soma das médias
        numAlunos++;

        printf("\nDeseja cadastrar outro aluno? (S/N): ");
        scanf(" %c", &continuar);
    }

    printf("\n--- BOLETIM GERAL ---\n");
    printf("Professor: %s\n", prof.nome);
    printf("Disciplina: %s\n", prof.disciplina);

    for (int i = 0; i < numAlunos; i++) {
        printf("\n--- Aluno %d ---\n", i + 1);
        printf("Nome: %s\n", alunos[i].nome);
        printf("Nota 1: %.2f | Nota 2: %.2f | Média: %.2f\n", alunos[i].nota1, alunos[i].nota2, alunos[i].media);
        printf("Status: %s\n", alunos[i].status);
    }

    // Calcula a média geral da turma
    if (numAlunos > 0) {
        mediaGeral = somaMedias / numAlunos;
        printf("\n--- Média Geral da Turma ---\n");
        printf("Média: %.2f\n", mediaGeral);

        encontrarMaiorEMenorMedia(alunos, numAlunos);
    } else {
        printf("\nNenhum aluno cadastrado para calcular a média geral.\n");
    }

    free(alunos);
    return 0;
}
